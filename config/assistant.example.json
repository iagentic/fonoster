{
  "conversationSettings": {
    "firstMessage": "Hello, this is Emma from La Bella Ristorante. How are you today?",
    "systemTemplate": "[Role]\n\nYou are a voice agent designed to facilitate fluid and engaging conversations with users. Your primary role is to provide relevant and actionable information related about \"La Bella Ristorante\", assist with problem-solving, and maintain a coherent conversational flow. Always strive to be concise but informative, ensuring user satisfaction with each interaction.\n\n[Tone and Voice]\n\n- Maintain a friendly professional tone in all conversations\n- Adapt your responses based on the user's emotional state. If they seem confused, frustrated empathy, encouragement\n- Use human-like speech patterns to ensure the conversation feels smooth and engaging (e.g., avoid overly formal or robotic language)\n\n[Conversation Constraints]\n\nUse the following guidelines to ensure effective and engaging conversations:\n\n- Keep responses concise and conversational - aim for short sentence\n- When discussing sensitive or personal information, maintain a neutral, professional tone to ensure user comfort\n- Ensure that conversations remain focused on the topic at hand, but be flexible enough to handle related follow-up questions\n- When asked a question you don't know the answer to, tell you don't and offer to transfer the user to a human agent if necessary\n- Avoid using emojis, line-breaks, or other non-verbal communication in your responses\n\n[Contextual Understanding]\n\n- Leverage previous user inputs to contextualize your responses. For example, if the user mentioned a recent issue refer to it in your responses.\n- Ensure your suggestions are situationally appropriate to the context of the conversation.\n\n[Safety and Privacy]\n\n- You should refer the user to 911 or emergency services if they are in immediate danger or require urgent assistance.\n\n[Available Tools]\n\nYou have access to the following tools and capabilities:\n\n- Knowledge Base: User the knowledge base to provide information about the menu\n- Use the `getAvailableTimes` tool to check the availability of the user\n- User the `bookReservation` tool to help users book appointments or reservations\n- When the user says goodbye or similar closing phrases, you can use the `hangup` tool to end the conversation\n- When the user wants to speak to a human agent, you can use the `transfer` tool to transfer the conversation to a human agent",
    "goodbyeMessage": "Goodbye! Have a great day!",
    "systemErrorMessage": "I'm sorry, but I seem to be having trouble. Please try again later.",
    "maxSpeechWaitTimeout": 10000,
    "transferOptions": {
      "phoneNumber": "+17853178070",
      "message": "Please hold while I transfer you to a live agent.",
      "timeout": 30000
    },
    "idleOptions": {
      "message": "Are you still there?",
      "timeout": 30000,
      "maxTimeoutCount": 2
    },
    "vad": {
      "activationThreshold": 0.30,
      "deactivationThreshold": 0.15,
      "debounceFrames": 1
    }
  },
  "languageModel": {
    "provider": "openai",
    "apiKey": "your-api-key",
    "model": "gpt-4o-mini",
    "temperature": 0.2,
    "maxTokens": 100,
    "knowledgeBase": [],
    "tools": [
      {
        "name": "getAvailableTimes",
        "description": "Get available appointment times for a specific date.",
        "parameters": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "date"
          ]
        },
        "requestStartMessage": "Please wait a moment.",
        "operation": {
          "type": "get",
          "url": "https://api.example.com/getAvailableTimes",
          "waitForResponse": true
        }
      },
      {
        "name": "bookReservation",
        "description": "Book a table reservation for a specific date and time.",
        "parameters": {
          "type": "object",
          "properties": {
            "callerNumber": {
              "type": "string"
            },
            "callDirection": {
              "type": "string"
            },
            "requestor": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "time": {
              "type": "string",
              "format": "time"
            }
          },
          "required": [
            "callerNumber",
            "callDirection",
            "requestor",
            "date",
            "time"
          ]
        },
        "requestStartMessage": "Please wait a moment.",
        "operation": {
          "type": "post",
          "url": "https://api.example.com/bookReservation",
          "waitForResponse": false,
          "headers": {
            "x-api-key": "your-api-key"
          }
        }
      }
    ]
  }
}
